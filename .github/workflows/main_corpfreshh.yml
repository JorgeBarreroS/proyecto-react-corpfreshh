name: Build and deploy React + PHP app to Azure

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-react:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Verify Node.js structure
        run: |
          echo "Estructura del proyecto:"
          ls -la
          echo "Contenido de package.json:"
          cat package.json || echo "⚠️ No hay package.json"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install --legacy-peer-deps
          npm list --depth=0 || true

      - name: Build React app
        run: |
          npm run build --if-present || echo "⚠️ Falló el build"
          [ -d "build" ] && du -sh build || echo "⚠️ No se generó la carpeta build"

      - name: Upload React build
        uses: actions/upload-artifact@v4
        with:
          name: react-build
          path: build/
          retention-days: 1

  build-php:
    needs: build-react
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Download React build artifact
        uses: actions/download-artifact@v4
        with:
          name: react-build
          path: build/
      
      - name: Debug - List repository files
        run: |
          echo "Contenido actual:"
          ls -la
          echo "Contenido de build/:"
          ls -la build/ || echo "⚠️ No existe build/"
      
      - name: Verify PHP folders exist
        run: |
          [ -d "CorpFreshhXAMPP" ] || { echo "❌ CorpFreshhXAMPP folder missing"; exit 1; }
          [ -d "corpfresh-php" ] || { echo "❌ corpfresh-php folder missing"; exit 1; }
          [ -d "build" ] || { echo "❌ build folder missing"; exit 1; }
          echo "✅ Todas las carpetas requeridas existen"

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Create deployment structure
        run: |
          mkdir -p deploy
          mkdir -p deploy/api
          
          if [ -d "build" ]; then
            cp -r build/* deploy/
            echo "✅ Build de React copiado correctamente"
          else
            echo "❌ Error: No se encontró la carpeta build/"
            exit 1
          fi
          
          mkdir -p deploy/api/xampp
          mkdir -p deploy/api/app
          cp -r CorpFreshhXAMPP/* deploy/api/xampp/
          cp -r corpfresh-php/* deploy/api/app/
          
          echo "Estructura final:"
          tree deploy || ls -R deploy

      - name: Create zip with correct structure
        run: |
          cd deploy
          zip -r ../release.zip ./*
          cd ..
          ls -lh release.zip

      - name: Verify ZIP contents
        run: |
          unzip -l release.zip
          unzip -t release.zip || { echo "❌ Error en la integridad del ZIP"; exit 1; }

      - name: Upload combined artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: release.zip
          retention-days: 1

  deploy:
    needs: build-php
    runs-on: ubuntu-latest
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write  # Required for OIDC
      contents: read
    
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app

      - name: Unzip artifact and verify structure
        run: |
          unzip release.zip -d deploy_unzipped
          echo "Contenido descomprimido:"
          ls -la deploy_unzipped/
          mv deploy_unzipped deploy
          echo "Estructura final deploy/:"
          ls -la deploy/

      - name: Verify deployment structure
        run: |
          [ -f "deploy/index.html" ] || { echo "❌ Falta index.html"; exit 1; }
          [ -d "deploy/api" ] || { echo "❌ Falta directorio api"; exit 1; }
          echo "✅ Estructura de despliegue verificada"

      - name: Login to Azure via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_67CEC4CFB2464FCEBA7C79C5CD09C234 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_7A18AE6E1EF648DCA46D464ADED172C9 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_7264DBB69C224CA48FE55CA95E917A92 }}
          enable-AzPSSession: true

      - name: Delay before deployment
        run: sleep 30s  # Espera para evitar conflictos con reinicios del contenedor

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'Corpfreshh'
          slot-name: 'Production'
          package: deploy/
          clean: false  # Evita limpieza agresiva
          restart: false  # No reiniciar automáticamente

      - name: Verify deployment status
        run: |
          echo "URL de la aplicación: ${{ steps.deploy-to-webapp.outputs.webapp-url }}"
          echo "Esperando 15 segundos para que la aplicación se estabilice..."
          sleep 15s